<%- include('../partials/header') %>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="mb-0">Quản Lý Điểm Danh Theo Học Sinh</h1>
        <p class="text-muted mb-0">
            <i class="bi bi-info-circle me-1"></i> Chọn học sinh để xem và quản lý lịch sử điểm danh
        </p>
    </div>
    <div>
        <a href="/academic/attendance" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left me-1"></i> Quay lại
        </a>
    </div>
</div>

<!-- Filter Form -->
<div class="card border-0 shadow-sm mb-4 rounded-3 overflow-hidden">
    <div class="card-header bg-transparent py-3">
        <h5 class="mb-0"><i class="bi bi-funnel-fill me-2 text-primary"></i>Bộ lọc điểm danh</h5>
    </div>
    <div class="card-body">
        <form id="filterForm" action="/academic/attendance/student" method="GET">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="classId" class="form-label">Lớp học</label>
                    <select class="form-select" id="classId" name="classId">
                        <option value="">Tất cả lớp học</option>
                        <% if (schedules && schedules.length > 0) { %>
                            <% schedules.forEach(function(schedule) { %>
                                <option value="<%= schedule._id %>" <%= selectedClassId && selectedClassId == schedule._id.toString() ? 'selected' : '' %>>
                                    <%= schedule.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="studentId" class="form-label">Học sinh</label>
                    <select class="form-select" id="studentId" name="studentId" <%= !students || students.length === 0 ? 'disabled' : '' %>>
                        <option value="">Chọn học sinh</option>
                        <% if (students && students.length > 0) { %>
                            <% students.forEach(function(student) { %>
                                <option value="<%= student._id %>" <%= selectedStudentId && selectedStudentId == student._id.toString() ? 'selected' : '' %>>
                                    <%= student.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="startDate" class="form-label">Từ ngày</label>
                    <input type="date" class="form-control" id="startDate" name="startDate" value="<%= startDate %>">
                </div>
                <div class="col-md-2">
                    <label for="endDate" class="form-label">Đến ngày</label>
                    <input type="date" class="form-control" id="endDate" name="endDate" value="<%= endDate %>">
                </div>
                <div class="col-md-1">
                    <label class="d-block form-label">&nbsp;</label>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-search me-1"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<% if (!selectedStudentId) { %>
    <div class="text-center py-5 my-5">
        <div class="mb-4">
            <i class="bi bi-person-badge text-muted" style="font-size: 4rem;"></i>
        </div>
        <h4 class="mb-3">Vui lòng chọn một học sinh</h4>
        <p class="text-muted mb-4">Chọn lớp học và học sinh từ form bên trên để xem lịch sử điểm danh</p>
        <% if (selectedClassId && (!students || students.length === 0)) { %>
            <div class="alert alert-warning d-inline-block">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                Không tìm thấy học sinh nào trong lớp đã chọn
            </div>
        <% } %>
    </div>
<% } else if (attendanceRecords && attendanceRecords.length > 0) { %>
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card border-0 shadow-sm h-100 rounded-3 overflow-hidden">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="bi bi-person-circle me-2 text-primary"></i>
                        Thông tin học sinh
                    </h5>
                    <div class="mb-3">
                        <p class="mb-1"><strong>Học sinh:</strong> <%= selectedStudent.name %></p>
                        <% if (selectedStudent.dateOfBirth) { %>
                            <p class="mb-1"><strong>Ngày sinh:</strong> <%= moment(selectedStudent.dateOfBirth).format('DD/MM/YYYY') %></p>
                        <% } %>
                        <% if (selectedClassId && schedules) { %>
                            <% const currentClass = schedules.find(s => s._id.toString() === selectedClassId.toString()); %>
                            <% if (currentClass) { %>
                                <p class="mb-0"><strong>Lớp đang chọn:</strong> <%= currentClass.name %></p>
                            <% } %>
                        <% } %>
                    </div>
                    <div>
                        <!-- <a href="/academic/attendance/student/<%= selectedStudent._id %>" class="btn btn-sm btn-primary">
                            <i class="bi bi-calendar3 me-1"></i>
                            Xem lịch sử điểm danh theo tháng
                        </a> -->
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-0 shadow-sm h-100 rounded-3 overflow-hidden">
                <div class="card-body">
                    <h5 class="card-title mb-3">
                        <i class="bi bi-bar-chart-fill me-2 text-primary"></i>
                        Thống kê điểm danh
                    </h5>
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="attendance-stat present-stat">
                                <div class="stat-icon">
                                    <i class="bi bi-check-circle-fill"></i>
                                </div>
                                <div class="stat-value">
                                    <%= stats.present %>
                                </div>
                                <div class="stat-label">Có mặt</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="attendance-stat absent-stat">
                                <div class="stat-icon">
                                    <i class="bi bi-x-circle-fill"></i>
                                </div>
                                <div class="stat-value">
                                    <%= stats.absent %>
                                </div>
                                <div class="stat-label">Vắng mặt</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="attendance-stat late-stat">
                                <div class="stat-icon">
                                    <i class="bi bi-clock-fill"></i>
                                </div>
                                <div class="stat-value">
                                    <%= stats.late %>
                                </div>
                                <div class="stat-label">Đi muộn</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Attendance Table -->
    <div class="card border-0 shadow-sm rounded-3 overflow-hidden">
        <div class="card-header bg-transparent py-3">
            <h5 class="mb-0">
                <i class="bi bi-list-check me-2 text-primary"></i>
                Lịch sử điểm danh
                <% if (startDate && endDate) { %>
                    <small class="text-muted">
                        (<%= moment(startDate).format('DD/MM/YYYY') %> - <%= moment(endDate).format('DD/MM/YYYY') %>)
                    </small>
                <% } %>
            </h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 50px; font-weight: 500">STT</th>
                            <th style="width: 120px; font-weight: 500">Ngày</th>
                            <th style="font-weight: 500">Lớp</th>
                            <th style="width: 150px; font-weight: 500">Trạng thái</th>
                            <th style="font-weight: 500">Ghi chú</th>
                            <th style="width: 120px; font-weight: 500">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% attendanceRecords.forEach((record, index) => { %>
                            <tr data-attendance-id="<%= record._id %>" data-student-id="<%= record.student._id %>" class="<%= record.status === 'absent' ? 'absent-highlight' : '' %>">
                                <td><%= index + 1 %></td>
                                <td><%= moment(record.date).format('DD/MM/YYYY') %></td>
                                <td>
                                    <% if (record.schedule) { %>
                                        <%= record.schedule.name %>
                                    <% } else { %>
                                        <span class="text-muted">-</span>
                                    <% } %>
                                </td>
                                <td>
                                    <select class="form-select form-select-sm status-select <%= record.status === 'absent' ? 'absent-select' : '' %>"
                                        data-original="<%= record.status %>" data-status="<%= record.status %>">
                                        <option value="present" <%= record.status === 'present' ? 'selected' : '' %>>Có mặt</option>
                                        <option value="absent" <%= record.status === 'absent' ? 'selected' : '' %>>Vắng mặt</option>
                                        <option value="late" <%= record.status === 'late' ? 'selected' : '' %>>Đi muộn</option>
                                    </select>
                                </td>
                                <td>
                                    <input type="text" class="form-control form-control-sm note-input" 
                                        value="<%= record.note || '' %>" data-original="<%= record.note || '' %>"
                                        placeholder="Thêm ghi chú">
                                </td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-success update-btn" style="display: none;">
                                        <i class="bi bi-check-lg"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger delete-btn" title="Xóa">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
<% } else if (selectedStudentId) { %>
    <div class="text-center py-5 my-5">
        <div class="mb-4">
            <i class="bi bi-calendar-x text-muted" style="font-size: 4rem;"></i>
        </div>
        <h4 class="mb-3">Không tìm thấy dữ liệu điểm danh</h4>
        <p class="text-muted mb-4">Không có điểm danh nào cho học sinh này trong thời gian đã chọn</p>
        
        <% if (selectedClassId) { %>
            <div class="alert alert-info mb-4">
                <strong>Thông tin tìm kiếm:</strong><br>
                Học sinh: <%= selectedStudent ? selectedStudent.name : 'Không xác định' %><br>
                Lớp: <%= schedules.find(s => s._id.toString() === selectedClassId)?.name || 'Không xác định' %><br>
                Thời gian: <%= moment(startDate).format('DD/MM/YYYY') %> - <%= moment(endDate).format('DD/MM/YYYY') %>
            </div>
            
            <a href="/academic/attendance/class/<%= selectedClassId %>" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i>
                Tạo điểm danh mới
            </a>
        <% } else { %>
            <div class="alert alert-info mb-4">
                <strong>Thông tin tìm kiếm:</strong><br>
                Học sinh: <%= selectedStudent ? selectedStudent.name : 'Không xác định' %><br>
                Thời gian: <%= moment(startDate).format('DD/MM/YYYY') %> - <%= moment(endDate).format('DD/MM/YYYY') %>
            </div>
        <% } %>
    </div>
<% } %>

<style>
    .attendance-stat {
        padding: 15px 10px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }
    
    .attendance-stat:hover {
        transform: translateY(-5px);
    }
    
    .present-stat {
        background-color: rgba(46, 204, 113, 0.1);
    }
    
    .absent-stat {
        background-color: rgba(231, 76, 60, 0.1);
    }
    
    .late-stat {
        background-color: rgba(243, 156, 18, 0.1);
    }
    
    .stat-icon {
        font-size: 1.5rem;
        margin-bottom: 5px;
    }
    
    .present-stat .stat-icon {
        color: #2ecc71;
    }
    
    .absent-stat .stat-icon {
        color: #e74c3c;
    }
    
    .late-stat .stat-icon {
        color: #f39c12;
    }
    
    .stat-value {
        font-size: 1.8rem;
        font-weight: 600;
    }
    
    .stat-label {
        font-size: 0.85rem;
        color: #555;
    }
    
    .status-select option[value="present"] {
        background-color: rgba(46, 204, 113, 0.1);
    }
    
    .status-select option[value="absent"] {
        background-color: rgba(231, 76, 60, 0.1);
    }
    
    .status-select option[value="late"] {
        background-color: rgba(243, 156, 18, 0.1);
    }
    
    .table {
        margin-bottom: 0;
    }
    
    .table tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.03);
    }
    
    .table th {
        font-weight: 500 !important;
        color: #444 !important;
        border-top: none;
        background-color: #f8f9fa;
    }
    
    .card {
        border-radius: 12px;
        overflow: hidden;
    }
    
    .btn-primary {
        background-color: #4361ee;
        border-color: #4361ee;
    }
    
    .btn-primary:hover {
        background-color: #3a56d4;
        border-color: #3a56d4;
    }
    
    .btn-outline-primary {
        color: #4361ee;
        border-color: #4361ee;
    }
    
    .btn-outline-primary:hover {
        background-color: #4361ee;
        border-color: #4361ee;
    }
    
    .form-control:focus, 
    .form-select:focus {
        border-color: #4361ee;
        box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
    }
    
    .text-primary {
        color: #4361ee !important;
    }
    
    .form-control, .form-select, .btn {
        border-radius: 6px;
    }
    
    /* Highlight học sinh vắng mặt */
    tr.absent-highlight {
        background-color: rgba(231, 76, 60, 0.15) !important;
        border-left: 4px solid #e74c3c !important;
        box-shadow: inset 0 0 5px rgba(231, 76, 60, 0.1) !important;
    }
    
    .absent-select {
        background-color: rgba(231, 76, 60, 0.1);
        border-color: rgba(231, 76, 60, 0.3);
    }
    
    .status-select[data-status="absent"] {
        background-color: rgba(231, 76, 60, 0.1);
        border-color: rgba(231, 76, 60, 0.3);
    }
    
    .status-select option[value="present"] {
        background-color: rgba(46, 204, 113, 0.1);
    }
    
    .status-select option[value="absent"] {
        background-color: rgba(231, 76, 60, 0.1);
    }
    
    .status-select option[value="late"] {
        background-color: rgba(243, 156, 18, 0.1);
    }
    
    .attendance-stats {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Highlight học sinh vắng mặt khi thay đổi trạng thái
        document.querySelectorAll('.status-select').forEach(select => {
            select.addEventListener('change', function() {
                const row = this.closest('tr');
                
                // Xóa lớp highlight cũ
                row.classList.remove('absent-highlight');
                this.classList.remove('absent-select');
                this.removeAttribute('data-status');
                
                // Thêm lớp highlight mới nếu là vắng mặt
                if (this.value === 'absent') {
                    row.classList.add('absent-highlight');
                    this.classList.add('absent-select');
                    this.setAttribute('data-status', 'absent');
                }
                
                // Kiểm tra sự thay đổi để hiển thị nút cập nhật
                checkChanges(row);
            });
        });
        
        // Xử lý khi chọn lớp học
        document.getElementById('classId').addEventListener('change', function() {
            fetchStudentsByClass(this.value);
        });
        
        // Xử lý lấy danh sách học sinh theo lớp
        function fetchStudentsByClass(classId) {
            if (!classId) {
                // Nếu không chọn lớp, reset dropdown học sinh
                const studentSelect = document.getElementById('studentId');
                studentSelect.innerHTML = '<option value="">Chọn học sinh</option>';
                studentSelect.disabled = true;
                return;
            }
            
            fetch(`/academic/students/by-schedule/${classId}`)
                .then(response => response.json())
                .then(data => {
                    const studentSelect = document.getElementById('studentId');
                    studentSelect.innerHTML = '<option value="">Chọn học sinh</option>';
                    
                    if (data.success && data.students && data.students.length > 0) {
                        data.students.forEach(student => {
                            const option = document.createElement('option');
                            option.value = student._id;
                            option.textContent = student.name;
                            studentSelect.appendChild(option);
                        });
                        studentSelect.disabled = false;
                    } else {
                        // Lớp không có học sinh nào
                        studentSelect.innerHTML = '<option value="">Không có học sinh trong lớp này</option>';
                        studentSelect.disabled = true;
                        
                        // Hiển thị thông báo (nếu cần)
                        showToast('Lớp học này không có học sinh nào', 'warning');
                    }
                })
                .catch(error => {
                    console.error('Lỗi khi lấy danh sách học sinh:', error);
                    const studentSelect = document.getElementById('studentId');
                    studentSelect.innerHTML = '<option value="">Lỗi khi tải dữ liệu</option>';
                    studentSelect.disabled = true;
                    
                    // Hiển thị thông báo lỗi
                    showToast('Lỗi khi tải danh sách học sinh', 'danger');
                });
        }
        
        // Hiển thị nút Update khi thay đổi trạng thái hoặc ghi chú
        const statusSelects = document.querySelectorAll('.status-select');
        const noteInputs = document.querySelectorAll('.note-input');
        
        function checkChanges(row) {
            const statusSelect = row.querySelector('.status-select');
            const noteInput = row.querySelector('.note-input');
            const updateBtn = row.querySelector('.update-btn');
            
            const statusChanged = statusSelect.value !== statusSelect.dataset.original;
            const noteChanged = noteInput.value !== noteInput.dataset.original;
            
            if (statusChanged || noteChanged) {
                updateBtn.style.display = 'inline-block';
            } else {
                updateBtn.style.display = 'none';
            }
        }
        
        statusSelects.forEach(select => {
            select.addEventListener('change', function() {
                const row = this.closest('tr');
                checkChanges(row);
            });
        });
        
        noteInputs.forEach(input => {
            input.addEventListener('input', function() {
                const row = this.closest('tr');
                checkChanges(row);
            });
        });
        
        // Xử lý cập nhật điểm danh
        document.querySelectorAll('.update-btn').forEach(btn => {
            btn.addEventListener('click', async function() {
                const row = this.closest('tr');
                const attendanceId = row.dataset.attendanceId;
                const status = row.querySelector('.status-select').value;
                const note = row.querySelector('.note-input').value;
                
                try {
                    // Tạo object dữ liệu để gửi
                    const data = {
                        status,
                        note
                    };
                    
                    // Nếu cần, có thể lấy thêm studentId từ thuộc tính data-student-id của row
                    if (row.dataset.studentId) {
                        data.studentId = row.dataset.studentId;
                    }
                    
                    // Nếu cần, có thể lấy thêm date từ các cell của row (tùy thuộc vào cấu trúc bảng)
                    const dateCell = row.querySelector('td:nth-child(2)'); // Giả sử cột thứ 2 chứa ngày tháng
                    if (dateCell) {
                        const dateText = dateCell.textContent.trim();
                        if (dateText) {
                            // Convert từ định dạng hiển thị (DD/MM/YYYY) sang định dạng YYYY-MM-DD cho API
                            const dateParts = dateText.split('/');
                            if (dateParts.length === 3) {
                                data.date = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
                            }
                        }
                    }
                    
                    const response = await fetch(`/academic/attendance/update/${attendanceId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });
                    
                    const responseData = await response.json();
                    
                    if (responseData.success) {
                        // Cập nhật giá trị gốc
                        row.querySelector('.status-select').dataset.original = status;
                        row.querySelector('.note-input').dataset.original = note;
                        
                        // Ẩn nút Update
                        this.style.display = 'none';
                        
                        // Hiệu ứng thành công
                        const originalColor = row.style.backgroundColor;
                        row.style.backgroundColor = 'rgba(46, 204, 113, 0.1)';
                        setTimeout(() => {
                            row.style.backgroundColor = originalColor;
                        }, 800);
                        
                        // Thông báo thành công
                        showToast('Đã cập nhật điểm danh thành công!', 'success');
                    } else {
                        alert('Lỗi: ' + responseData.message);
                    }
                } catch (error) {
                    console.error('Lỗi khi cập nhật điểm danh:', error);
                    alert('Có lỗi xảy ra khi cập nhật điểm danh!');
                }
            });
        });
        
        // Xử lý xóa điểm danh
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                if (confirm('Bạn có chắc chắn muốn xóa bản ghi điểm danh này?')) {
                    const row = this.closest('tr');
                    const attendanceId = row.dataset.attendanceId;
                    
                    fetch(`/academic/attendance/${attendanceId}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Xóa hàng khỏi bảng
                            row.style.backgroundColor = 'rgba(231, 76, 60, 0.1)';
                            setTimeout(() => {
                                row.remove();
                                
                                // Cập nhật lại số thứ tự
                                document.querySelectorAll('tbody tr').forEach((row, index) => {
                                    row.querySelector('td:first-child').textContent = index + 1;
                                });
                                
                                // Nếu không còn hàng nào, reload trang để hiển thị trạng thái "không có dữ liệu"
                                if (document.querySelectorAll('tbody tr').length === 0) {
                                    window.location.reload();
                                }
                            }, 500);
                            
                            // Thông báo thành công
                            showToast('Đã xóa điểm danh thành công!', 'danger');
                        } else {
                            alert('Lỗi: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Lỗi khi xóa điểm danh:', error);
                        alert('Có lỗi xảy ra khi xóa điểm danh!');
                    });
                }
            });
        });
        
        // Hàm hiển thị toast message
        function showToast(message, type) {
            // Nếu toast container chưa tồn tại, tạo một cái
            if (!document.getElementById('toast-container')) {
                const toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
                toastContainer.style.zIndex = '5';
                document.body.appendChild(toastContainer);
            }
            
            const toastContainer = document.getElementById('toast-container');
            
            // Tạo toast
            const toastId = 'toast-' + Math.random().toString(36).substr(2, 9);
            const toast = document.createElement('div');
            toast.id = toastId;
            toast.className = `toast align-items-center text-white bg-${type} border-0`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            
            // Nội dung toast
            const flexContainer = document.createElement('div');
            flexContainer.className = 'd-flex';
            
            const toastBody = document.createElement('div');
            toastBody.className = 'toast-body';
            toastBody.textContent = message;
            
            const closeButton = document.createElement('button');
            closeButton.type = 'button';
            closeButton.className = 'btn-close btn-close-white me-2 m-auto';
            closeButton.setAttribute('data-bs-dismiss', 'toast');
            closeButton.setAttribute('aria-label', 'Close');
            
            flexContainer.appendChild(toastBody);
            flexContainer.appendChild(closeButton);
            toast.appendChild(flexContainer);
            toastContainer.appendChild(toast);
            
            // Khởi tạo toast
            const bsToast = new bootstrap.Toast(toast, {
                autohide: true,
                delay: 3000
            });
            
            // Hiển thị toast
            bsToast.show();
            
            // Xóa toast khỏi DOM sau khi bị ẩn
            toast.addEventListener('hidden.bs.toast', function () {
                toast.remove();
            });
        }
        
        // Script đặc biệt để đảm bảo chỉ có một menu active
        console.log("Đang xử lý đặc biệt cho trang attendance-by-student");
        
        // Đảm bảo chỉ menu Điểm Danh active
        document.querySelectorAll('.sidebar .nav-link').forEach(function(link) {
            // Xóa active class từ tất cả menu ngoại trừ Điểm Danh
            if (link.getAttribute('href') !== '/academic/attendance') {
                link.classList.remove('active');
            } else {
                link.classList.add('active');
            }
        });
        
        // Log để debug
        console.log("Đã xóa active class từ các menu không liên quan");
    });
</script>

<%- include('../partials/footer') %> 