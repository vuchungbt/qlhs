<%- include('../partials/header') %>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">Điểm Danh - <%= moment(selectedDate).format('DD/MM/YYYY') %></h1>
    <div class="d-flex align-items-center">
        <div class="dropdown me-2">
            <button class="btn btn-outline-primary dropdown-toggle" type="button" id="viewOptions" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-eye me-1"></i> Xem điểm danh
            </button>
            <ul class="dropdown-menu dropdown-menu-end shadow border-0" aria-labelledby="viewOptions">
                <li><a class="dropdown-item" href="/academic/attendance/class"><i class="bi bi-grid-3x3 me-2 text-primary"></i> Theo lớp học</a></li>
                <li><a class="dropdown-item" href="/academic/attendance/student"><i class="bi bi-person-badge me-2 text-primary"></i> Theo học sinh</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="/academic/attendance"><i class="bi bi-calendar-date me-2 text-primary"></i> Điểm danh hôm nay</a></li>
            </ul>
        </div>
        <select id="classFilter" class="form-select me-2" style="max-width: 200px;">
            <option value="">Tất cả học sinh</option>
            <% if (schedules && schedules.length > 0) { %>
                <% schedules.forEach(function(schedule) { %>
                    <option value="<%= schedule._id %>" <%= selectedClassId && selectedClassId === schedule._id.toString() ? 'selected' : '' %>><%= schedule.name %></option>
                <% }); %>
            <% } %>
        </select>
        <input type="date" class="form-control me-2" id="attendanceDate" value="<%= moment(selectedDate).format('YYYY-MM-DD') %>" style="max-width: 180px;">
        <button class="btn btn-primary" id="saveAttendanceBtn">
            <i class="bi bi-save me-1"></i> Lưu </button>
    </div>
</div>

<!-- Các liên kết trực tiếp đến chức năng mới -->
<div class="card border-0 shadow-sm mb-4 bg-light-primary">
    <div class="card-body p-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
            </div>
            <div class="d-flex">
                <a href="/academic/attendance/class" class="btn btn-outline-primary me-2">
                    <i class="bi bi-grid-3x3 me-1"></i> Quản lý theo lớp học
                </a>
                <a href="/academic/attendance/student" class="btn btn-outline-primary">
                    <i class="bi bi-person-badge me-1"></i> Quản lý theo học sinh
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Giao diện điểm danh dạng lưới -->
<div class="card border-0 shadow-sm mb-4 rounded-3 overflow-hidden">
    <div class="card-header bg-transparent d-flex justify-content-between align-items-center py-3 border-bottom-0">
        <h5 class="mb-0">
            <% if (selectedClassId) { %>
                <% const selectedClass = schedules.find(s => s._id.toString() === selectedClassId); %>
                <%= selectedClass ? selectedClass.name : 'Danh sách học sinh' %>
            <% } else { %>
                Danh sách học sinh
            <% } %>
        </h5>
    </div>
    <div class="card-body pt-0">
        <div class="attendance-legend d-flex mb-3">
            <span class="me-3"><i class="bi bi-circle-fill text-success"></i> Có mặt</span>
            <span class="me-3"><i class="bi bi-circle-fill text-danger"></i> Vắng mặt</span>
            <span><i class="bi bi-circle-fill text-warning"></i> Đi muộn</span>
        </div>
        
        <div class="attendance-grid">
            <% if (students && students.length > 0) { %>
                <% students.forEach(function(student) { 
                    const studentAttendance = attendance && attendance.find(a => a.student && a.student._id && a.student._id.toString() === student._id.toString());
                    const status = studentAttendance ? studentAttendance.status : null;
                    let statusClass = '';
                    if (status === 'present') statusClass = 'present';
                    else if (status === 'absent') statusClass = 'absent';
                    else if (status === 'late') statusClass = 'late';
                %>
                    <div class="attendance-card <%= statusClass %>" data-student-id="<%= student._id %>">
                        <div class="student-info">
                            <div class="student-name fw-medium"><%= student.name %></div>
                        </div>
                        <div class="attendance-actions">
                            <button class="attendance-btn present-btn" data-status="present" title="Có mặt">
                                <i class="bi bi-check-circle-fill"></i>
                            </button>
                            <button class="attendance-btn absent-btn" data-status="absent" title="Vắng mặt">
                                <i class="bi bi-x-circle-fill"></i>
                            </button>
                            <button class="attendance-btn late-btn" data-status="late" title="Đi muộn">
                                <i class="bi bi-clock-fill"></i>
                            </button>
                        </div>
                        <div class="note-container">
                            <input type="text" class="form-control form-control-sm attendance-note" placeholder="Ghi chú" value="<%= studentAttendance && studentAttendance.note ? studentAttendance.note : '' %>">
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="alert alert-light w-100 text-center border">
                    <div class="d-flex align-items-center justify-content-center py-3">
                        <i class="bi bi-info-circle text-primary me-3 fs-4"></i>
                        <p class="mb-0">
                            <% if (selectedClassId) { %>
                                Không có học sinh nào trong lớp này
                            <% } else { %>
                                Vui lòng chọn một lớp học để xem danh sách học sinh
                            <% } %>
                        </p>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Lịch sử điểm danh -->
<div class="card border-0 shadow-sm rounded-3 overflow-hidden">
    <div class="card-header bg-transparent py-3 border-bottom-0">
        <h5 class="mb-0">Điểm Danh</h5>
    </div>
    <div class="card-body pt-0">
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th style="font-weight: 500">Thời Gian</th>
                        <th style="font-weight: 500">Họ Tên</th>
                        <th style="font-weight: 500">Lớp</th>
                        <th style="font-weight: 500">Trạng Thái</th>
                        <th style="font-weight: 500">Ghi Chú</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (attendance && attendance.length > 0) { %>
                        <% attendance.forEach(function(record) { %>
                            <tr class="<%= record.status === 'absent' ? 'absent-highlight' : '' %>">
                                <td><%= moment(record.date).format('DD/MM/YYYY') %></td>
                                <td class="fw-medium"><%= record.student ? record.student.name : 'Không xác định' %></td>
                                <td>
                                    <% if (record.schedule && record.schedule.name) { %>
                                        <%= record.schedule.name %>
                                    <% } else { %>
                                        -
                                    <% } %>
                                </td>
                                <td>
                                    <% if (record.status === 'present') { %>
                                        <span class="badge bg-success rounded-pill">Có mặt</span>
                                    <% } else if (record.status === 'absent') { %>
                                        <span class="badge bg-danger rounded-pill">Vắng mặt</span>
                                    <% } else if (record.status === 'late') { %>
                                        <span class="badge bg-warning text-dark rounded-pill">Đi muộn</span>
                                    <% } %>
                                </td>
                                <td><%= record.note || '-' %></td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="5" class="text-center py-4">
                                <div class="py-3">
                                    <i class="bi bi-calendar-x fs-1 text-muted"></i>
                                    <p class="mt-3">Không có dữ liệu điểm danh cho ngày này</p>
                                </div>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .attendance-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 15px;
    }
    
    .attendance-card {
        border: 1px solid #dee2e6;
        border-radius: 12px;
        padding: 16px;
        background-color: #f8f9fa;
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0,0,0,0.04);
    }
    
    .attendance-card:hover {
        box-shadow: 0 5px 12px rgba(0,0,0,0.08);
        transform: translateY(-2px);
    }
    
    .attendance-card.selected {
        border: 2px solid #4361ee !important;
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2) !important;
    }
    
    .attendance-card.present {
        border-left: 5px solid #2ecc71;
        background-color: rgba(46, 204, 113, 0.05);
    }
    
    .attendance-card.absent {
        background-color: #ffebee;
        border-left: 3px solid #f44336;
    }
    
    .attendance-card.absent .status-badge {
        background-color: #f44336;
        color: white;
    }
    
    .attendance-card.late {
        border-left: 5px solid #f39c12;
        background-color: rgba(243, 156, 18, 0.05);
    }
    
    .student-info {
        margin-bottom: 12px;
        padding: 5px;
        border-radius: 6px;
        transition: background-color 0.2s;
    }
    
    .attendance-card.selected .student-info {
        background-color: rgba(67, 97, 238, 0.08);
        font-weight: bold;
    }
    
    .student-name {
        font-weight: 500;
        font-size: 1rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
    .attendance-actions {
        display: flex;
        gap: 8px;
        margin-bottom: 12px;
    }
    
    .attendance-btn {
        border: none;
        background: none;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 5px 8px;
        border-radius: 6px;
        color: #6c757d;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 38px;
        height: 38px;
    }
    
    .attendance-btn:hover {
        background-color: rgba(0,0,0,0.05);
        transform: scale(1.05);
    }
    
    .attendance-btn.active {
        background-color: rgba(0,0,0,0.1);
    }
    
    .present-btn {
        color: #2ecc71;
    }
    
    .absent-btn {
        color: #e74c3c;
    }
    
    .late-btn {
        color: #f39c12;
    }
    
    .present .present-btn,
    .absent .absent-btn,
    .late .late-btn {
        background-color: rgba(0,0,0,0.1);
        transform: scale(1.05);
    }
    
    .note-container {
        margin-top: 8px;
    }
    
    .attendance-legend span {
        display: inline-flex;
        align-items: center;
        font-size: 0.9rem;
    }
    
    .attendance-legend i {
        margin-right: 5px;
    }
    
    /* Hiệu ứng khi chọn bấm vào nút trạng thái */
    .attendance-btn:active {
        transform: scale(0.9);
    }
    
    /* Đổi màu dropdown khi active */
    #bulkActionBtn.active {
        background-color: #4361ee;
        color: white;
    }
    
    /* Đổi con trỏ cho các thành phần tương tác */
    .attendance-card, 
    .attendance-btn,
    #toggleAllBtn,
    .bulk-status {
        cursor: pointer;
    }
    
    .attendance-note {
        cursor: text;
        border-radius: 6px;
    }
    
    /* Màu hiển thị trạng thái */
    .badge.bg-success {
        background-color: #2ecc71 !important;
    }
    
    .badge.bg-danger {
        background-color: #e74c3c !important;
    }
    
    .badge.bg-warning {
        background-color: #f39c12 !important;
    }
    
    .badge.bg-primary {
        background-color: #4361ee !important;
    }
    
    .card {
        border-radius: 12px;
        overflow: hidden;
    }
    
    .btn-primary {
        background-color: #4361ee;
        border-color: #4361ee;
    }
    
    .btn-primary:hover {
        background-color: #3a56d4;
        border-color: #3a56d4;
    }
    
    .btn-outline-primary {
        color: #4361ee;
        border-color: #4361ee;
    }
    
    .btn-outline-primary:hover {
        background-color: #4361ee;
        border-color: #4361ee;
    }
    
    /* Màu nền tùy chỉnh */
    .bg-light-primary {
        background-color: rgba(67, 97, 238, 0.08);
    }
    
    /* Hiệu ứng hover cho các thẻ trong bảng */
    .table tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.03);
    }
    
    /* Highlight học sinh vắng mặt */
    tr.absent-highlight {
        background-color: rgba(231, 76, 60, 0.15) !important;
        border-left: 4px solid #e74c3c !important;
        box-shadow: inset 0 0 5px rgba(231, 76, 60, 0.1) !important;
    }
    
    .status-count {
        display: inline-block;
        padding: 3px 8px;
        border-radius: 4px;
        margin-right: 5px;
        font-weight: 500;
    }
    
    .absent-count {
        background-color: #ffebee;
        color: #f44336;
        border: 1px solid #f44336;
    }
    
    .present-count {
        background-color: #e8f5e9;
        color: #4caf50;
        border: 1px solid #4caf50;
    }
    
    .late-count {
        background-color: #fff8e1;
        color: #ff9800;
        border: 1px solid #ff9800;
    }
    
    #attendanceGrid .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    #attendanceGrid .card-header .attendance-stats {
        display: flex;
        gap: 5px;
    }
    
    #attendanceGrid .attendance-time {
        font-size: 0.85rem;
        color: #757575;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Đảm bảo Bootstrap dropdown hoạt động
    const dropdownElementList = document.querySelectorAll('.dropdown-toggle');
    dropdownElementList.forEach(function(dropdownToggleEl) {
        new bootstrap.Dropdown(dropdownToggleEl);
    });
    
    // Xác định ngày hiện tại và lớp đang chọn (nếu có)
    const currentDate = document.getElementById('attendanceDate').value;
    const selectedClassId = document.getElementById('classFilter').value; // Lấy giá trị lớp đang chọn
    
    // Đánh dấu các nút trạng thái là active dựa theo trạng thái hiện tại của học sinh
    document.querySelectorAll('.attendance-card').forEach(card => {
        // Nếu card đã có trạng thái (từ cơ sở dữ liệu)
        if (card.classList.contains('present') || card.classList.contains('absent') || card.classList.contains('late')) {
            let status = '';
            if (card.classList.contains('present')) status = 'present';
            else if (card.classList.contains('absent')) status = 'absent';
            else if (card.classList.contains('late')) status = 'late';
            
            // Đánh dấu nút tương ứng là active
            const button = card.querySelector(`.${status}-btn`);
            if (button) {
                button.classList.add('active');
            }
        }
        // Nếu lớp được chọn và card chưa có trạng thái, thiết lập mặc định là "có mặt"
        else if (selectedClassId) {
            card.classList.add('present');
            const presentBtn = card.querySelector('.present-btn');
            if (presentBtn) {
                presentBtn.classList.add('active');
            }
        }
    });
    
    // Bấm vào nút trạng thái (Có mặt, Vắng mặt, Đi muộn) cho từng học sinh
    document.querySelectorAll('.attendance-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.stopPropagation();
            const card = this.closest('.attendance-card');
            const status = this.getAttribute('data-status');
            console.log('Đặt trạng thái ' + status + ' cho học sinh: ' + card.querySelector('.student-name').textContent.trim());
            
            // Nếu nút đã active, nghĩa là đang bỏ chọn trạng thái đó
            if (this.classList.contains('active')) {
                 card.classList.remove('present', 'absent', 'late');
                 this.classList.remove('active');
                 // Tắt active của các nút khác trên cùng card
                 card.querySelectorAll('.attendance-btn').forEach(btn => btn.classList.remove('active'));
            } else {
                // Xóa class trạng thái cũ trên card
                card.classList.remove('present', 'absent', 'late');
                // Thêm class trạng thái mới
                card.classList.add(status);
                // Tắt active của các nút khác và bật active cho nút này
                 card.querySelectorAll('.attendance-btn').forEach(btn => btn.classList.remove('active'));
                 this.classList.add('active');
            }
            
            // Hiệu ứng trực quan
            card.style.transition = 'all 0.3s';
            card.style.transform = 'scale(1.05)';
            setTimeout(() => {
                card.style.transform = 'scale(1)';
            }, 300);
        });
    });
    
    // Input ghi chú không kích hoạt sự kiện click của card
    document.querySelectorAll('.attendance-note').forEach(input => {
        input.addEventListener('click', function(e) {
            e.stopPropagation();
        });
    });
    
    // Lưu điểm danh
    document.getElementById('saveAttendanceBtn').addEventListener('click', function() {
        const attendanceDate = document.getElementById('attendanceDate').value;
        const selectedClassId = document.getElementById('classFilter').value; // Lấy classId đang chọn
        const attendanceData = [];
        
        // Thu thập dữ liệu từ tất cả card có trạng thái
        document.querySelectorAll('.attendance-card.present, .attendance-card.absent, .attendance-card.late').forEach(card => {
            const studentId = card.getAttribute('data-student-id');
            let status = '';
            
            if (card.classList.contains('present')) status = 'present';
            else if (card.classList.contains('absent')) status = 'absent';
            else if (card.classList.contains('late')) status = 'late';
            
            const noteInput = card.querySelector('.attendance-note');
            
            attendanceData.push({
                studentId: studentId,
                status: status,
                note: noteInput ? noteInput.value : '',
                // date: attendanceDate // Sẽ gửi date chung ở ngoài
            });
        });
        
        // Gửi dữ liệu điểm danh lên server
        if (attendanceData.length > 0) {
            console.log('Gửi dữ liệu điểm danh cho ngày:', attendanceDate);
            
            fetch('/academic/attendance', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    date: attendanceDate,
                    classId: selectedClassId || null, // Gửi classId, hoặc null nếu không chọn lớp
                    attendances: attendanceData
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Đã lưu điểm danh thành công cho ' + attendanceData.length + ' học sinh!');
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    alert('Lỗi: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Lỗi khi lưu điểm danh:', error);
                alert('Có lỗi xảy ra khi lưu điểm danh!');
            });
        } else {
            alert('Vui lòng điểm danh ít nhất một học sinh trước khi lưu!'); 
        }
    });
    
    // Xử lý khi thay đổi ngày điểm danh
    document.getElementById('attendanceDate').addEventListener('change', function() {
        // Chuyển đến trang điểm danh với ngày mới, giữ nguyên lớp đã chọn
        const selectedClass = document.getElementById('classFilter').value;
        const url = '/academic/attendance?date=' + this.value + (selectedClass ? '&classId=' + selectedClass : '');
        window.location.href = url;
    });
    
    // Xử lý filter theo lớp
    document.getElementById('classFilter').addEventListener('change', function() {
        const selectedClass = this.value;
        const currentDate = document.getElementById('attendanceDate').value;
        
        // Chuyển đến trang với lớp được chọn và ngày hiện tại
        window.location.href = '/academic/attendance?date=' + currentDate + (selectedClass ? '&classId=' + selectedClass : '');
    });

    // Debug - kiểm tra dropdown có hoạt động không
    console.log('Đã khởi tạo dropdown cho viewOptions');
    document.getElementById('viewOptions').addEventListener('click', function(e) {
        console.log('Dropdown viewOptions được nhấp');
    });

    // Đảm bảo cập nhật lại khi thay đổi trạng thái điểm danh
    function toggleAttendanceStatus(studentId, button) {
        // ... existing code ...
        
        // Cập nhật giao diện sau khi thay đổi trạng thái
        setTimeout(() => {
            renderAttendanceCards();
        }, 100);
    }

    // Cập nhật giao diện ban đầu
    setTimeout(() => {
        renderAttendanceCards();
    }, 300);
});

function renderAttendanceCards() {
    // Cập nhật trạng thái đánh dấu cho các card
    document.querySelectorAll('.attendance-card').forEach(card => {
        // Thêm active class cho nút tương ứng với trạng thái
        if (card.classList.contains('present')) {
            card.querySelector('.present-btn')?.classList.add('active');
            card.querySelector('.absent-btn')?.classList.remove('active');
            card.querySelector('.late-btn')?.classList.remove('active');
        } 
        else if (card.classList.contains('absent')) {
            card.querySelector('.present-btn')?.classList.remove('active');
            card.querySelector('.absent-btn')?.classList.add('active');
            card.querySelector('.late-btn')?.classList.remove('active');
        }
        else if (card.classList.contains('late')) {
            card.querySelector('.present-btn')?.classList.remove('active');
            card.querySelector('.absent-btn')?.classList.remove('active');
            card.querySelector('.late-btn')?.classList.add('active');
        }
    });
    
    // Cập nhật thống kê điểm danh
    updateAttendanceStats();
}

function updateAttendanceStats() {
    const presentCount = document.querySelectorAll('.attendance-card.present').length;
    const absentCount = document.querySelectorAll('.attendance-card.absent').length;
    const lateCount = document.querySelectorAll('.attendance-card.late').length;
    
    console.log('Thống kê điểm danh:', {
        present: presentCount,
        absent: absentCount,
        late: lateCount
    });
    
    // Hiển thị thống kê nếu có element chứa
    const cardHeader = document.querySelector('.card-header');
    if (cardHeader) {
        // Kiểm tra xem đã có thống kê chưa
        let statsContainer = cardHeader.querySelector('.attendance-stats');
        if (!statsContainer) {
            statsContainer = document.createElement('div');
            statsContainer.className = 'attendance-stats d-flex';
            cardHeader.appendChild(statsContainer);
        }
        
        statsContainer.innerHTML = `
            <span class="status-count present-count ms-2">Có mặt: ${presentCount}</span>
            <span class="status-count absent-count ms-2">Vắng: ${absentCount}</span>
            <span class="status-count late-count ms-2">Muộn: ${lateCount}</span>
        `;
    }
}
</script>

<%- include('../partials/footer') %>